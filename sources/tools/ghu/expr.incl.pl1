declare create_value entry(binary(15), binary(31)) returns(pointer);
declare create_name_value entry(binary(31)) returns(pointer);
declare eval_number_value entry(binary(31), binary(31)) returns(pointer);
declare eval_string_value entry(binary(31), binary(31)) returns(pointer);
declare eval_bitstring_value entry(binary(31), binary(31)) returns(pointer);
declare eval_name_value entry(binary(31), binary(31)) returns(pointer);
declare eval entry(binary(31)) returns(pointer);
declare avalue entry(pointer, binary(15)) returns(binary(31));
declare objtype entry(binary(31), binary(31)) returns(pointer);
declare anegate entry(binary(31), binary(31)) returns(pointer);
declare bnegate entry(binary(31), binary(31)) returns(pointer);
declare lnegate entry(binary(31), binary(31)) returns(pointer);
declare add entry(binary(31), binary(31)) returns(pointer);
declare sub entry(binary(31), binary(31)) returns(pointer);
declare mul entry(binary(31), binary(31)) returns(pointer);
declare div entry(binary(31), binary(31)) returns(pointer);
declare amod entry(binary(31), binary(31)) returns(pointer);
declare cmp_lt entry(binary(31), binary(31)) returns(pointer);
declare cmp_leq entry(binary(31), binary(31)) returns(pointer);
declare cmp_gt entry(binary(31), binary(31)) returns(pointer);
declare cmp_geq entry(binary(31), binary(31)) returns(pointer);
declare cmp_eq entry(binary(31), binary(31)) returns(pointer);
declare cmp_neq entry(binary(31), binary(31)) returns(pointer);
declare band entry(binary(31), binary(31)) returns(pointer);
declare land entry(binary(31), binary(31)) returns(pointer);
declare bor entry(binary(31), binary(31)) returns(pointer);
declare lor entry(binary(31), binary(31)) returns(pointer);
declare bxor entry(binary(31), binary(31)) returns(pointer);
declare attach_type entry(binary(15), binary(31)) returns(pointer);
declare lookup_field entry(binary(31), binary(31)) returns(pointer);
declare lookup_array entry(binary(31), binary(31)) returns(pointer);
declare value_from_lvalue entry(binary(31), binary(31)) returns(pointer);
declare if_test entry(pointer) returns(binary(31));
declare build_value_list entry(binary(31), binary(31)) returns(binary(31));
declare obspec_a entry(binary(31), binary(31)) returns(binary(31));
declare obspec_o entry(binary(31), binary(31)) returns(binary(31));
declare obspec_r entry(binary(31), binary(31)) returns(binary(31));
declare avatar_number entry(binary(31)) returns(binary(31));
declare default_type entry(pointer, binary(15), 1 like value_descriptor);
declare binop entry(entry(binary(31), binary(31)) returns(pointer),
     binary(31), binary(31)) returns(binary(31));
declare unop entry(entry(binary(31), binary(31)) returns(pointer),
     binary(31)) returns(binary(31));
declare setup_index entry(pointer, binary(31)) returns(binary(31));
declare setup_offsets entry(binary(15), binary(15), binary(15));
declare check_for_field entry(pointer) returns(pointer);
declare resolve_types entry(binary(15), binary(15)) returns(binary(15));
declare bit_value entry(binary(31), 1 like vbit_struct);
declare setvalue entry(pointer, binary(15), binary(31)) returns(pointer);
declare init_random entry;

declare set_mode static binary(15) external;
declare now_symbolptr pointer external;
declare today_symbolptr pointer external;
declare random_symbolptr pointer external;
declare last_textid_symbolptr pointer external;
declare last_textid binary(31) external;
declare page_count_symbolptr pointer external;
declare page_count binary(31) external;

declare setup_file_pointers entry;
declare push_input entry(character(*) varying);
declare pop_input entry returns(bit(1));
declare push_output entry;
declare pop_output entry;
declare setup_output entry(binary(31), bit(1));
declare getchar entry returns(binary(15));
declare ungetc entry(binary(15));
declare putline entry(character(*) varying);
declare putstr entry(character(*) varying);
declare putcol entry(character(*) varying, binary(15));
declare col_reset entry;
declare putchar entry(binary(15));
declare put_hexstring entry(pointer, binary(15));
declare getline entry returns(character(LINE_LENGTH) varying);
declare p2i entry(pointer) returns(binary(31));
declare i2p entry(binary(31)) returns(pointer);
declare s2i entry(character(*) varying) returns(binary(31));
declare copy_string entry(character(*) varying) returns(pointer);
declare error entry(character(*) varying);
declare warning entry(character(*) varying);
declare fatal_error entry(character(*) varying);
declare err_check entry(binary(15), character(*) varying) returns(bit(1));
declare discover_ports entry;
declare get_prompt entry returns(character(8) varying);
declare set_prompt entry(character(8) varying);
declare pad entry(character(*) varying, binary(15)) returns(character(256) varying);
declare alloc entry(binary(31), binary(15)) returns(pointer);
declare free entry(pointer);
declare init_alloc_monitor entry;
declare print_alloc_monitor entry;
declare c$start_logging entry(binary(31), binary(31));
declare c$stop_logging entry(binary(31), binary(31));

declare error_flag bit(1) static external;

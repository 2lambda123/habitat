(defun
    (ply-convert
	(set-mark)
	(search-forward "&&&3")
	(beginning-of-line)
	(delete-to-killbuffer)
	(search-forward "&&&4")
	(end-of-line)
	(forward-character)
	(delete-to-killbuffer)
	(end-of-file)
	(yank-from-killbuffer)
	(search-reverse "&&&3")
	(beginning-of-line)
	(insert-file "/u0/chip/toolBox/yaccpar.pl1")
	(set-mark)
	(beginning-of-file)
	(search-forward "lint")
	(beginning-of-line)
	(delete-to-killbuffer)
	(end-of-file)
	(yank-from-killbuffer)
	(search-reverse "&&&4")
	(end-of-line)
	(forward-character)
	(set-mark)
	(search-forward "&&&1")
	(search-reverse "switch")
	(end-of-line)
	(forward-character)
	(delete-to-killbuffer)
	(search-forward "&&&2")
	(end-of-line)
	(next-line)
	(forward-character)
	(set-mark)
	(end-of-file)
	(delete-to-killbuffer)
	(search-reverse "&&&4")
	(re-replace-string "^case " "casex(")
	(re-replace-string ":$" "):")
	(re-replace-string "# line.*" "")
	(re-replace-string "^{$" "")
	(re-replace-string "^} break;$" " goto endcases;")
	(end-of-line)
	(forward-character)
	(set-mark)
	(end-of-file)
	(delete-to-killbuffer)
	(search-reverse "&&&!")
	(end-of-line)
	(forward-character)
	(yank-from-killbuffer)
	(beginning-of-file)
	(search-forward "}")
	(search-reverse ",")
	(delete-next-character)
	(search-forward "#")
	(beginning-of-line)
	(delete-next-word)
	(insert-string "%replace")
	(forward-word)
	(insert-string " by")
	(end-of-line)
	(insert-string ";")
	(forward-character)
	(delete-next-word)
	(insert-string "%replace")
	(forward-word)
	(insert-string " by")
	(end-of-line)
	(insert-string ";")
	(beginning-of-file)
	(re-replace-string "^short" "declare")
	(re-replace-string "\\[].*={" "(0:xxx) binary(15) static init(")
	(re-replace-string "};$" ");")
	(replace-string "yypvt[" "yyv(yypvt")
	(replace-string "]" ")")
	(write-file-exit)
    )
    (plh-convert
	(replace-string "# define" "%replace")
	(replace-string " " " by ")
	(replace-string "replace by " "replace ")
	(re-replace-string "$" ";")
	(redraw-display)
	(write-file-exit)
    )
)

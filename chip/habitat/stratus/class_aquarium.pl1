/*
 *   class_aquarium.pl1
 *
 *   Aquarium object behavior module for MicroCosm(TM).
 *
 *   Chip Morningstar
 *   Lucasfilm Ltd.
 *   9-April-1986
 */

%include 'microcosm.incl.pl1';
%include 'defs_helper.incl.pl1';
%include 'defs_action.incl.pl1';

initialize_class_aquarium: procedure;

     %replace AQUARIUM_REQUESTS by 4;

     declare a(0:AQUARIUM_REQUESTS) entry based;
     declare class_aquarium_actions pointer;
     declare 1 aquarium based %include struct_aquarium;

     %replace I by CLASS_AQUARIUM;

     Class_Table(I).capacity = 0;
     Class_Table(I).max_requests = AQUARIUM_REQUESTS;
     Class_Table(I).alloc_size = size(aquarium);
     Class_Table(I).pc_state_bytes = 1;
     Class_Table(I).known = true;
     Class_Table(I).opaque_container = false;
     Class_Table(I).filler = false;

     allocate a set(class_aquarium_actions);
     Class_Table(I).actions = class_aquarium_actions;

     Class_Table(I).actions->a(HELP) = generic_HELP; /* 0 */
     Class_Table(I).actions->a(GET)   = generic_GET;   /* 1 */
     Class_Table(I).actions->a(PUT)   = generic_PUT;   /* 2 */
     Class_Table(I).actions->a(THROW) = generic_THROW; /* 3 */
     Class_Table(I).actions->a(FEED)  = aquarium_FEED; /* 4 */

end initialize_class_aquarium;

%replace FISH_SWIMMING   by 1;
%replace FISH_FEEDING    by 2;
%replace FISH_DEAD       by 3;
%replace FISH_GONE       by 4;

%replace FISH_FEED_DELAY by 1 /* five minutes */;
%replace FISH_DEATH_DELAY by 288 /* one day */;

aquarium_FEED: procedure;
     declare junk pointer;
     declare 1 self based(selfptr) %include struct_aquarium;

     if (holding_class(CLASS_FISH_FOOD) & adjacent(selfptr) & self.state = 
               FISH_SWIMMING) then do;
          self.state = self.gr_state = FISH_FEEDING;
          call n_msg_1(selfptr, CHANGESTATE$, self.state);
          call cancel_event(self.fish_die);
          self.fish_die = null();
          self.gen_flags(MODIFIED) = true;
          junk = schedule_event(selfptr, Fish_Fed, FISH_FEED_DELAY);
     end;
end;

Fish_Fed: procedure;
     declare 1 self based(selfptr) %include struct_aquarium;

     self.state = self.gr_state = FISH_SWIMMING;
     call b_msg_1(selfptr, CHANGESTATE$, self.state);
     self.fish_die = schedule_event(selfptr, Fish_Die, FISH_DEATH_DELAY);
     self.gen_flags(MODIFIED) = true;
end;

Fish_Die: procedure;
     declare 1 self based(selfptr) %include struct_aquarium;

     self.state = self.gr_state = FISH_DEAD;
     self.fish_die = null();
     call b_msg_1(selfptr, CHANGESTATE_$, self.state);
     self.gen_flags(MODIFIED) = true;
end;
